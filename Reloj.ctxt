#BlueJ class context
comment0.target=Reloj
comment1.params=cyclesPerSecond
comment1.target=Reloj(float)
comment1.text=\r\n\ Crea\ un\ nuevo\ reloj\ y\ establece\ sus\ ciclos\ por\ segundo.\r\n
comment2.params=cyclesPerSecond
comment2.target=void\ setCyclesPerSecond(float)
comment2.text=\r\n\ Establece\ el\ n\u00FAmero\ de\ ciclos\ que\ transcurren\ por\ segundo.\r\n
comment3.params=
comment3.target=void\ reset()
comment3.text=\r\n\ Restablece\ las\ estad\u00EDsticas\ del\ reloj.\ Los\ ciclos\ transcurridos\ y\ el\ exceso\ de\ ciclo\ se\ restablecer\u00E1n\r\n\ a\ 0,\ la\ \u00FAltima\ hora\ de\ actualizaci\u00F3n\ se\ restablecer\u00E1\ a\ la\ hora\ actual\ y\r\n\ el\ indicador\ de\ pausa\ se\ establecer\u00E1\ en\ falso.\r\n
comment4.params=
comment4.target=void\ update()
comment4.text=\r\nActualiza\ las\ estad\u00EDsticas\ del\ reloj.\ El\ n\u00FAmero\ de\ ciclos\ transcurridos,\ as\u00ED\ como\ el\r\n\ El\ exceso\ de\ ciclo\ se\ calcular\u00E1\ solo\ si\ el\ reloj\ no\ est\u00E1\ en\ pausa.\ Esta\r\n\ Se\ debe\ llamar\ al\ m\u00E9todo\ en\ cada\ fotograma\ incluso\ cuando\ est\u00E1\ en\ pausa\ para\ evitar\r\n\ desagradables\ sorpresas\ con\ el\ tiempo\ delta.\r\n
comment5.params=paused
comment5.target=void\ setPaused(boolean)
comment5.text=\r\n\ Pausa\ o\ reactiva\ el\ reloj.\ Mientras\ est\u00E1\ en\ pausa,\ un\ reloj\ no\ se\ actualizar\u00E1\r\n\ ciclos\ transcurridos\ o\ exceso\ de\ ciclos,\ aunque\ el\ m\u00E9todo\ {@code\ update}\ deber\u00EDa\r\n\ Todav\u00EDa\ se\ llamar\u00E1\ a\ cada\ fotograma\ para\ evitar\ problemas.\r\n
comment6.params=
comment6.target=boolean\ isPaused()
comment6.text=\r\n\ Comprueba\ si\ el\ reloj\ est\u00E1\ actualmente\ en\ pausa.\r\n
comment7.params=
comment7.target=boolean\ hasElapsedCycle()
comment7.text=\r\n\ Comprueba\ si\ ya\ ha\ transcurrido\ un\ ciclo\ para\ este\ reloj.\ Si\ es\ as\u00ED,\r\n\ el\ n\u00FAmero\ de\ ciclos\ transcurridos\ se\ reducir\u00E1\ en\ uno.\t\r\n
comment8.params=
comment8.target=boolean\ peekElapsedCycle()
comment8.text=\r\n\ Comprueba\ si\ ya\ ha\ transcurrido\ un\ ciclo\ para\ este\ reloj.\ diferente\ a\r\n\ {@code\ hasElapsedCycle},\ la\ cantidad\ de\ ciclos\ no\ disminuir\u00E1\r\n\ si\ el\ n\u00FAmero\ de\ ciclos\ transcurridos\ es\ mayor\ que\ 0.\r\n
comment9.params=
comment9.target=long\ getCurrentTime()
comment9.text=\r\n\ Calcula\ la\ hora\ actual\ en\ milisegundos\ usando\ el\ alto\ de\ la\ computadora\r\n\ reloj\ de\ resoluci\u00F3n.\ Esto\ es\ mucho\ m\u00E1s\ confiable\ que\r\n
numComments=10
